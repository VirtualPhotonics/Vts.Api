{
	"info": {
		"_postman_id": "0c034423-a63a-477b-b7e4-25d371719088",
		"name": "VTS API Postman Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1038267"
	},
	"item": [
		{
			"name": "Healthcheck",
			"item": [
				{
					"name": "Ready",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/ready",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"ready"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ready - POST",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "TESTKEY",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-API-KEY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/api/ready",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"ready"
							]
						}
					},
					"response": []
				},
				{
					"name": "Default",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Spectral Collection",
			"item": [
				{
					"name": "Skin",
					"item": [
						{
							"name": "μa - Mie Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"mua\",\n    \"plotName\": \"μa\",\n    \"tissueType\": \"Skin\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 28.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 22.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.7,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Melanin\",\n            \"value\": 0.0051,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"Mie\",\n    \"mieScatterer\": {\n        \"particleRadius\": 0.5,\n        \"particleRefractiveIndex\": 1.4,\n        \"mediumRefractiveIndex\": 1,\n        \"volumeFraction\": 0.01\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 8\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μs' - Mie Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"musp\",\n    \"plotName\": \"μs'\",\n    \"tissueType\": \"Skin\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 28.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 22.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.7,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Melanin\",\n            \"value\": 0.0051,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"Mie\",\n    \"mieScatterer\": {\n        \"particleRadius\": 0.5,\n        \"particleRefractiveIndex\": 1.4,\n        \"mediumRefractiveIndex\": 1,\n        \"volumeFraction\": 0.01\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 8\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μa - Power Law Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"mua\",\n    \"plotName\": \"μa\",\n    \"tissueType\": \"Skin\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 28.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 22.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.7,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Melanin\",\n            \"value\": 0.0051,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 1.2,\n        \"b\": 1.42\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 36\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μs' - Power Law Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"musp\",\n    \"plotName\": \"μs'\",\n    \"tissueType\": \"Skin\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 28.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 22.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.7,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Melanin\",\n            \"value\": 0.0051,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 1.2,\n        \"b\": 1.42\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 36\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μs' - Intralipid Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"musp\",\n    \"plotName\": \"μs'\",\n    \"tissueType\": \"Skin\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 28.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 22.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.7,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Melanin\",\n            \"value\": 0.0051,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"Intralipid\",\n    \"intralipidScatterer\": {\n        \"volumeFraction\": 0.01\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 8\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μa - Intralipid Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"mua\",\n    \"plotName\": \"μa\",\n    \"tissueType\": \"Skin\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 28.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 22.4,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.7,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Melanin\",\n            \"value\": 0.0051,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"Intralipid\",\n    \"intralipidScatterer\": {\n        \"volumeFraction\": 0.01\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 8\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Liver",
					"item": [
						{
							"name": "μs' - Power Law Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"musp\",\n    \"plotName\": \"μs'\",\n    \"tissueType\": \"Liver\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 66,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 124,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.87,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0.02,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 0.84,\n        \"b\": 0.55\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 36\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μa - Power Law Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"mua\",\n    \"plotName\": \"μa\",\n    \"tissueType\": \"Liver\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 66,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 124,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.87,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0.02,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 0.84,\n        \"b\": 0.55\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 36\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μa - Power Law Scatterer Default Absorbers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"mua\",\n    \"plotName\": \"mua\",\n    \"tissueType\": \"Liver\",\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 0.84,\n        \"b\": 0.55\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 36\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μs' - Power Law Scatterer Default Absorbers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"musp\",\n    \"plotName\": \"mus'\",\n    \"tissueType\": \"Liver\",\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 0.84,\n        \"b\": 0.55\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 36\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μs' - Mie Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"musp\",\n    \"plotName\": \"μs'\",\n    \"tissueType\": \"Liver\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 66,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 124,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.87,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0.02,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"Mie\",\n    \"mieScatterer\": {\n        \"particleRadius\": 0.5,\n        \"particleRefractiveIndex\": 1.4,\n        \"mediumRefractiveIndex\": 1,\n        \"volumeFraction\": 0.01\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 36\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						},
						{
							"name": "μa - Mie Scatterer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"spectralPlotType\": \"mua\",\n    \"plotName\": \"μs'\",\n    \"tissueType\": \"Liver\",\n    \"absorberConcentration\": [\n        {\n            \"label\": \"Hb\",\n            \"value\": 66,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"HbO2\",\n            \"value\": 124,\n            \"units\": \"μM\"\n        },\n        {\n            \"label\": \"H2O\",\n            \"value\": 0.87,\n            \"units\": \"vol. frac.\"\n        },\n        {\n            \"label\": \"Fat\",\n            \"value\": 0.02,\n            \"units\": \"vol. frac.\"\n        }\n    ],\n    \"scatteringType\": \"Mie\",\n    \"mieScatterer\": {\n        \"particleRadius\": 0.5,\n        \"particleRefractiveIndex\": 1.4,\n        \"mediumRefractiveIndex\": 1,\n        \"volumeFraction\": 0.01\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 36\n    \t}\n    }\n}"
								},
								"url": {
									"raw": "https://localhost:5001/api/v1/spectral",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"v1",
										"spectral"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Forward Solver",
			"item": [
				{
					"name": "Forward Solver - ROfRho",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfRho\",\n    \"xAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 19\n    \t}\n    },\n    \"opticalProperties\": {\n\t        \"mua\": 0.0678,\n\t        \"musp\": 0.84,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRhoAndTime",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfRhoAndTime\",\n    \"independentAxis\": {\n        \"axis\": \"time\",\n        \"axisValue\": 0.05\n    },\n    \"xAxis\": {\n        \"axis\": \"rho\",\n        \"axisRange\": {\n            \"start\": 0.5,\n            \"stop\": 9.5,\n            \"count\": 19\n        }\n    },\n    \"opticalProperties\": {\n        \"title\": \"Optical Properties\",\n        \"mua\": 0.01,\n        \"musp\": 1,\n        \"g\": 0.8,\n        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRho - Wavelength",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfRho\",\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 8\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 9\n    \t}\n    },\n    \"wavelengthOpticalPropertyList\": [\n\t    {\n\t        \"mua\": 0.0678524459053467,\n\t        \"musp\": 1.06457665884717,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0361315970667451,\n\t        \"musp\": 1.02205758134735,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0386397078314404,\n\t        \"musp\": 0.984001116480081,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0368351407773848,\n\t        \"musp\": 0.949685469521921,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0443735471868325,\n\t        \"musp\": 0.918541699382405,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0514456486132726,\n\t        \"musp\": 0.890114561696066,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0694976128306352,\n\t        \"musp\": 0.864034936500061,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0678098107455411,\n\t        \"musp\": 0.84,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    \t}\n    ],\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfFxAndFt - 2 ranges ft independent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfFxAndFt\",\n    \"xAxis\": {\n    \t\"axis\": \"fx\",\n    \t\"axisRange\": {\n        \t\"start\": 0,\n        \t\"stop\": 0.5,\n        \t\"count\": 11\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"ft\",\n    \t\"axisRange\": {\n        \t\"start\": 0,\n        \t\"stop\": 0.5,\n        \t\"count\": 3\n    \t}\n    },\n    \"opticalProperties\": {\n\t        \"mua\": 0.01,\n\t        \"musp\": 1,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRho",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfRho\",\n    \"xAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 9\n    \t}\n    },\n    \"opticalProperties\": {\n        \"mua\": 0.01,\n        \"musp\": 1,\n        \"g\": 0.8,\n        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRho with noise",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfRho\",\n    \"xAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 9\n    \t}\n    },\n    \"opticalProperties\": {\n        \"mua\": 0.01,\n        \"musp\": 1,\n        \"g\": 0.8,\n        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"5\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRho PointSourceSDA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"PointSourceSDA\",\n    \"solutionDomain\": \"ROfRho\",\n    \"xAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 9\n    \t}\n    },\n    \"opticalProperties\": {\n        \"mua\": 0.01,\n        \"musp\": 1,\n        \"g\": 0.8,\n        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfFxAndTime - 2 ranges",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"PointSourceSDA\",\n    \"solutionDomain\": \"ROfFxAndTime\",\n    \"xAxis\": {\n    \t\"axis\": \"time\",\n    \t\"axisRange\": {\n        \t\"start\": 0.001,\n        \t\"stop\": 0.05,\n        \t\"count\": 51\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"fx\",\n    \t\"axisRange\": {\n        \t\"start\": 0,\n        \t\"stop\": 0.5,\n        \t\"count\": 11\n    \t}\n    },\n    \"opticalProperties\": {\n\t        \"mua\": 0.06,\n\t        \"musp\": 1.06,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRhoAndTime - 2 ranges",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfRhoAndTime\",\n    \"xAxis\": {\n    \t\"axis\": \"time\",\n    \t\"axisRange\": {\n        \t\"start\": 0,\n        \t\"stop\": 0.05,\n        \t\"count\": 11\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 19\n    \t}\n    },\n    \"opticalProperties\": {\n\t        \"mua\": 0.01,\n\t        \"musp\": 1,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfFxAndFt - 2 ranges",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfFxAndFt\",\n    \"xAxis\": {\n    \t\"axis\": \"ft\",\n    \t\"axisRange\": {\n        \t\"start\": 0,\n        \t\"stop\": 0.5,\n        \t\"count\": 11\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"fx\",\n    \t\"axisRange\": {\n        \t\"start\": 0,\n        \t\"stop\": 0.5,\n        \t\"count\": 3\n    \t}\n    },\n    \"opticalProperties\": {\n\t        \"mua\": 0.01,\n\t        \"musp\": 1,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRhoAndTime - Wavelength",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"PointSourceSDA\",\n    \"solutionDomain\": \"ROfRhoAndTime\",\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 8\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 9\n    \t}\n    },\n    \"secondIndependentAxis\": {\n    \t\"axis\": \"time\",\n    \t\"axisValue\": 0.05\n    },\n    \"wavelengthOpticalPropertyList\": [\n\t    {\n\t        \"mua\": 0.0678524459053467,\n\t        \"musp\": 1.06457665884717,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0361315970667451,\n\t        \"musp\": 1.02205758134735,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0386397078314404,\n\t        \"musp\": 0.984001116480081,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0368351407773848,\n\t        \"musp\": 0.949685469521921,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0443735471868325,\n\t        \"musp\": 0.918541699382405,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0514456486132726,\n\t        \"musp\": 0.890114561696066,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0694976128306352,\n\t        \"musp\": 0.864034936500061,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0678098107455411,\n\t        \"musp\": 0.84,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    \t}\n    ],\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRhoAndFx",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfFxAndFx\",\n    \"independentAxis\": {\n    \t\"axis\": \"fx\",\n    \t\"axisValue\": 0.05\n    },\n    \"xAxis\": {\n    \t\"axis\": \"time\",\n    \t\"axisRange\": {\n        \t\"start\": 0,\n        \t\"stop\": 0.5,\n        \t\"count\": 19\n    \t}\n    },\n    \"opticalProperties\": {\n        \"mua\": 0.01,\n        \"musp\": 1,\n        \"g\": 0.8,\n        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfFxAndFt - Wavelength",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\n    \"solutionDomain\": \"ROfFxAndFt\",\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 8\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"fx\",\n    \t\"axisRange\": {\n        \t\"start\": 0,\n        \t\"stop\": 0.5,\n        \t\"count\": 9\n    \t}\n    },\n    \"secondIndependentAxis\": {\n    \t\"axis\": \"ft\",\n    \t\"axisValue\": 0\n    },\n    \"wavelengthOpticalPropertyList\": [\n\t    {\n\t        \"mua\": 0.0678524459053467,\n\t        \"musp\": 1.06457665884717,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0361315970667451,\n\t        \"musp\": 1.02205758134735,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0386397078314404,\n\t        \"musp\": 0.984001116480081,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0368351407773848,\n\t        \"musp\": 0.949685469521921,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0443735471868325,\n\t        \"musp\": 0.918541699382405,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0514456486132726,\n\t        \"musp\": 0.890114561696066,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0694976128306352,\n\t        \"musp\": 0.864034936500061,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0678098107455411,\n\t        \"musp\": 0.84,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    \t}\n    ],\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRho PointSourceSDA 2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"PointSourceSDA\",\n    \"solutionDomain\": \"ROfRho\",\n    \"xAxis\": {\n    \t\"axis\": \"fx\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 19\n    \t}\n    },\n    \"opticalProperties\": {\n        \"mua\": 0.01,\n        \"musp\": 1,\n        \"g\": 0.8,\n        \"n\": 1.4\n    },\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"5\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRho - Wavelength 2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"PointSourceSDA\",\n    \"solutionDomain\": \"ROfRho\",\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 8\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 9\n    \t}\n    },\n    \"wavelengthOpticalPropertyList\": [\n\t    {\n\t        \"mua\": 0.0678524459053467,\n\t        \"musp\": 1.06457665884717,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0361315970667451,\n\t        \"musp\": 1.02205758134735,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0386397078314404,\n\t        \"musp\": 0.984001116480081,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0368351407773848,\n\t        \"musp\": 0.949685469521921,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0443735471868325,\n\t        \"musp\": 0.918541699382405,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0514456486132726,\n\t        \"musp\": 0.890114561696066,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0694976128306352,\n\t        \"musp\": 0.864034936500061,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0678098107455411,\n\t        \"musp\": 0.84,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    \t}\n    ],\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\"\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Inverse Solver",
			"item": [
				{
					"name": "Inverse Solver",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"PointSourceSDA\",\n    \"optimizerType\": \"MPFitLevenbergMarquardt\",\n    \"solutionDomain\": \"rofrho\",\n    \"xAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 9\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"time\",\n    \t\"axisValue\": 0.05\n    },\n    \"inverseSolverType\": \"PointSourceSDA\",\n    \"opticalProperties\": {\n        \"mua\": 0.01,\n        \"musp\": 1,\n        \"g\": 0.8,\n        \"n\": 1.4\n    },\n    \"measuredData\":[[0.5,0.0352304381546136],[1.0,0.014368953131916435],[1.5,0.0077256224944451043],[2.0,0.0046414734076406089],[2.5,0.0029591061550317734],[3.0,0.0019567204760751406],[3.5,0.001326067149533223],[4.0,0.00091467057173402289],[4.5,0.000639390319322507],[5.0,0.00045170719547787871],[5.5,0.00032189268619509397],[6.0,0.00023106891488301496],[6.5,0.00016692267886029029],[7.0,0.00012125558671965844],[7.5,8.8519676438976783E-05],[8.0,6.4910942032566415E-05],[8.5,4.779256318127966E-05],[9.0,3.5319800076064575E-05],[9.5,2.6191692417237693E-05]]\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/inverse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"inverse"
							]
						}
					},
					"response": []
				},
				{
					"name": "Inverse Solver - Wavelength",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"forwardSolverType\": \"PointSourceSDA\",\n    \"inverseSolverEngine\": \"PointSourceSDA\",\n    \"solutionDomain\": \"ROfRho\",\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": 650,\n        \t\"stop\": 1000,\n        \t\"count\": 8\n    \t}\n    },\n    \"independentAxis\": {\n    \t\"axis\": \"rho\",\n    \t\"axisRange\": {\n        \t\"start\": 0.5,\n        \t\"stop\": 9.5,\n        \t\"count\": 9\n    \t}\n    },\n    \"wavelengthOpticalPropertyList\": [\n\t    {\n\t        \"mua\": 0.0678524459053467,\n\t        \"musp\": 1.06457665884717,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0361315970667451,\n\t        \"musp\": 1.02205758134735,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0386397078314404,\n\t        \"musp\": 0.984001116480081,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0368351407773848,\n\t        \"musp\": 0.949685469521921,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0443735471868325,\n\t        \"musp\": 0.918541699382405,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0514456486132726,\n\t        \"musp\": 0.890114561696066,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0694976128306352,\n\t        \"musp\": 0.864034936500061,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n\t    },\n\t    {\n\t        \"mua\": 0.0678098107455411,\n\t        \"musp\": 0.84,\n\t        \"g\": 0.8,\n\t        \"n\": 1.4\n    \t}\n    ],\n    \"modelAnalysis\": \"R\",\n    \"noiseValue\": \"0\",\n    \"measuredData\":[[650,0.03757559436630803],[700,0.03642534112749431],[750,0.03422595442899969],[800,0.0324167695064711],[850,0.030497157708222037],[900,0.0288226994243444],[950,0.02718564616862515],[1000,0.025998211719311357],[650,0.00930611971108063],[700,0.010657585196511617],[750,0.010286186968902721],[800,0.010164293733480037],[850,0.009585876009075176],[900,0.009095124791613786],[950,0.00827559449445059],[1000,0.008190187852213735],[650,0.0029739205260132136],[700,0.003935533802890317],[750,0.003814873671752708],[800,0.0038531053567852835],[850,0.0035692504470349116],[900,0.003336371090660979],[950,0.002877850589611597],[1000,0.002899919523467734],[650,0.0011202344923379804],[700,0.0017114711547250518],[750,0.0016625284890804022],[800,0.0017127354060420855],[850,0.0015545742016347228],[900,0.001428309867090108],[950,0.0011656365810843558],[1000,0.0011930188488355085],[650,0.00045827142014725564],[700,0.000809630138954956],[750,0.0007875528634488688],[800,0.0008273059599149085],[850,0.0007351770817273403],[900,0.0006635671297599192],[950,0.0005120779386821386],[1000,0.0005322753936128046],[650,0.00019728294338474826],[700,0.0004037377652223085],[750,0.00039285283597287584],[800,0.00042060941292439553],[850,0.00036553410448836754],[900,0.00032386465894379134],[950,0.000236113847963527],[1000,0.0002492258245077268],[650,0.0000880951583462366],[700,0.0002091551484890839],[750,0.00020335456137745246],[800,0.00022177830753647253],[850,0.0001882572984469717],[900,0.00016357542248897285],[950,0.00011253082080027964],[1000,0.00012058878432062612],[650,0.00004047385139570443],[700,0.00011162789103384096],[750,0.00010833856351438841],[800,0.000120291245952519],[850,0.00009961911100736902],[900,0.00008480736584327411],[950,0.00005498748073778873],[1000,0.00005980400501337823],[650,0.000019029153552775764],[700,0.00006103731612217383],[750,0.00005908485360889226],[800,0.00006676082152811549],[850,0.00005388473493234002],[900,0.00004490761645790063],[950,0.000027412746447384668],[1000,0.000030249618426184355]]\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/inverse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"inverse"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Forward Solver Skin using Spectral values",
			"item": [
				{
					"name": "Skin μa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"_.each(jsonData.plotList[0].data, (x, index) => pm.collectionVariables.set(`mua${index + 1}`, x[1]));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"spectralPlotType\": \"mua\",\n    \"plotName\": \"μa\",\n    \"tissueType\": \"Skin\",\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 1.2,\n        \"b\": 1.42\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": {{Wavelength_Start}},\n        \t\"stop\": {{Wavelength_Stop}},\n        \t\"count\": {{Wavelength_Count}}\n    \t}\n    }\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/spectral",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"spectral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Skin μs'",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"_.each(jsonData.plotList[0].data, (x, index) => pm.collectionVariables.set(`musp${index + 1}`, x[1]));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"spectralPlotType\": \"musp\",\n    \"plotName\": \"μs'\",\n    \"tissueType\": \"Skin\",\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 1.2,\n        \"b\": 1.42\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": {{Wavelength_Start}},\n        \t\"stop\": {{Wavelength_Stop}},\n        \t\"count\": {{Wavelength_Count}}\n    \t}\n    }\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/spectral",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"spectral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRhoAndTime - XAxis Rho",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var requestBody = {\r",
									"    \"forwardSolverType\": \"PointSourceSDA\",\r",
									"    \"solutionDomain\": \"ROfRhoAndTime\",\r",
									"    \"xAxis\": {\r",
									"    \t\"axis\": \"rho\",\r",
									"    \t\"axisRange\": {\r",
									"        \t\"start\": 0.5,\r",
									"        \t\"stop\": 9.5,\r",
									"        \t\"count\": 19\r",
									"    \t}\r",
									"    },\r",
									"    \"independentAxis\": {\r",
									"    \t\"axis\": \"wavelength\",\r",
									"    \t\"axisRange\": {\r",
									"        \t\"start\": pm.environment.get(\"Wavelength_Start\"),\r",
									"        \t\"stop\": pm.environment.get(\"Wavelength_Stop\"),\r",
									"        \t\"count\": pm.environment.get(\"Wavelength_Count\")\r",
									"    \t}\r",
									"    },\r",
									"    \"secondIndependentAxis\": {\r",
									"    \t\"axis\": \"time\",\r",
									"    \t\"axisValue\": 0.05\r",
									"    },\r",
									"    \"wavelengthOpticalPropertyList\": [],\r",
									"    \"modelAnalysis\": \"R\",\r",
									"    \"noiseValue\": \"0\"\r",
									"};\r",
									"\r",
									"for (var i = 1; i <= pm.environment.get(\"Wavelength_Count\"); i++) {\r",
									"    requestBody.wavelengthOpticalPropertyList.push({\r",
									"\t        \"mua\": pm.variables.get(`mua${i}`),\r",
									"\t        \"musp\": pm.variables.get(`musp${i}`),\r",
									"\t        \"g\": 0.8,\r",
									"\t        \"n\": 1.4\r",
									"\t});    \r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('requestBody', JSON.stringify(requestBody));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{requestBody}}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Forward Solver Liver using spectral values",
			"item": [
				{
					"name": "Liver μa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"_.each(jsonData.plotList[0].data, (x, index) => pm.collectionVariables.set(`mua${index + 1}`, x[1]));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"spectralPlotType\": \"mua\",\n    \"plotName\": \"μa\",\n    \"tissueType\": \"Liver\",\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 0.84,\n        \"b\": 0.55\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": {{Wavelength_Start}},\n        \t\"stop\": {{Wavelength_Stop}},\n        \t\"count\": {{Wavelength_Count}}\n    \t}\n    }\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/spectral",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"spectral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Liver μs'",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"_.each(jsonData.plotList[0].data, (x, index) => pm.collectionVariables.set(`musp${index + 1}`, x[1]));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"spectralPlotType\": \"musp\",\n    \"plotName\": \"μs'\",\n    \"tissueType\": \"Liver\",\n    \"scatteringType\": \"PowerLaw\",\n    \"powerLawScatterer\": {\n        \"a\": 0.84,\n        \"b\": 0.55\n    },\n    \"xAxis\": {\n    \t\"axis\": \"wavelength\",\n    \t\"axisRange\": {\n        \t\"start\": {{Wavelength_Start}},\n        \t\"stop\": {{Wavelength_Stop}},\n        \t\"count\": {{Wavelength_Count}}\n    \t}\n    }\n}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/spectral",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"spectral"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forward Solver - ROfRhoAndTime - Wavelength",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var requestBody = {\r",
									"    \"forwardSolverType\": \"PointSourceSDA\",\r",
									"    \"solutionDomain\": \"ROfRhoAndTime\",\r",
									"    \"xAxis\": {\r",
									"    \t\"axis\": \"wavelength\",\r",
									"    \t\"axisRange\": {\r",
									"        \t\"start\": pm.environment.get(\"Wavelength_Start\"),\r",
									"        \t\"stop\": pm.environment.get(\"Wavelength_Stop\"),\r",
									"        \t\"count\": pm.environment.get(\"Wavelength_Count\")\r",
									"    \t}\r",
									"    },\r",
									"    \"independentAxis\": {\r",
									"    \t\"axis\": \"rho\",\r",
									"    \t\"axisRange\": {\r",
									"        \t\"start\": 0.5,\r",
									"        \t\"stop\": 9.5,\r",
									"        \t\"count\": 19\r",
									"    \t}\r",
									"    },\r",
									"    \"secondIndependentAxis\": {\r",
									"    \t\"axis\": \"time\",\r",
									"    \t\"axisValue\": 0.05\r",
									"    },\r",
									"    \"wavelengthOpticalPropertyList\": [],\r",
									"    \"modelAnalysis\": \"R\",\r",
									"    \"noiseValue\": \"0\"\r",
									"};\r",
									"\r",
									"for (var i = 1; i <= pm.environment.get(\"Wavelength_Count\"); i++) {\r",
									"    requestBody.wavelengthOpticalPropertyList.push({\r",
									"\t        \"mua\": pm.collectionVariables.get(`mua${i}`),\r",
									"\t        \"musp\": pm.collectionVariables.get(`musp${i}`),\r",
									"\t        \"g\": 0.8,\r",
									"\t        \"n\": 1.4\r",
									"\t});    \r",
									"}\r",
									"postman.setEnvironmentVariable('requestBody', JSON.stringify(requestBody));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{requestBody}}"
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Inaccurate FDPM",
			"item": [
				{
					"name": "ROfRhoAndFt",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\r\n    \"solutionDomain\": \"ROfRhoAndFt\",\r\n    \"xAxis\": {\r\n    \t\"axis\": \"ft\",\r\n    \t\"axisRange\": {\r\n        \t\"start\": 0,\r\n        \t\"stop\": 1,\r\n        \t\"count\": 101\r\n    \t}\r\n    },\r\n    \"independentAxis\": {\r\n    \t\"axis\": \"rho\",\r\n    \t\"axisValue\": 20\r\n    },\r\n    \"wavelengthOpticalPropertyList\": [\r\n\t    {\r\n\t        \"mua\": 0.01,\r\n\t        \"musp\": 1,\r\n\t        \"g\": 0.8,\r\n\t        \"n\": 1.4\r\n\t    },\r\n\t    {\r\n\t        \"mua\": 0.01,\r\n\t        \"musp\": 0.5,\r\n\t        \"g\": 0.8,\r\n\t        \"n\": 1.4\r\n\t    },\r\n\t    {\r\n\t        \"mua\": 0.01,\r\n\t        \"musp\": 0.2,\r\n\t        \"g\": 0.8,\r\n\t        \"n\": 1.4\r\n\t    },\r\n\t    {\r\n\t        \"mua\": 0.01,\r\n\t        \"musp\": 0.1,\r\n\t        \"g\": 0.8,\r\n\t        \"n\": 1.4\r\n\t    }\r\n    ],\r\n    \"modelAnalysis\": \"R\",\r\n    \"noiseValue\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				},
				{
					"name": "ROfRhoAndFt - Mua",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"forwardSolverType\": \"DistributedPointSourceSDA\",\r\n    \"solutionDomain\": \"ROfRhoAndFt\",\r\n    \"xAxis\": {\r\n    \t\"axis\": \"ft\",\r\n    \t\"axisRange\": {\r\n        \t\"start\": 0,\r\n        \t\"stop\": 1,\r\n        \t\"count\": 101\r\n    \t}\r\n    },\r\n    \"independentAxis\": {\r\n    \t\"axis\": \"rho\",\r\n    \t\"axisValue\": 20\r\n    },\r\n    \"wavelengthOpticalPropertyList\": [\r\n\t    {\r\n\t        \"mua\": 0.01,\r\n\t        \"musp\": 1,\r\n\t        \"g\": 0.8,\r\n\t        \"n\": 1.4\r\n\t    },\r\n\t    {\r\n\t        \"mua\": 0.01,\r\n\t        \"musp\": 0.5,\r\n\t        \"g\": 0.8,\r\n\t        \"n\": 1.4\r\n\t    },\r\n\t    {\r\n\t        \"mua\": 0.01,\r\n\t        \"musp\": 0.2,\r\n\t        \"g\": 0.8,\r\n\t        \"n\": 1.4\r\n\t    },\r\n\t    {\r\n\t        \"mua\": 0.01,\r\n\t        \"musp\": 0.1,\r\n\t        \"g\": 0.8,\r\n\t        \"n\": 1.4\r\n\t    }\r\n    ],\r\n    \"modelAnalysis\": \"dRdMua\",\r\n    \"noiseValue\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/api/v1/forward",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"v1",
								"forward"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-KEY",
				"type": "string"
			},
			{
				"key": "value",
				"value": "TESTKEY",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "mua1",
			"value": ""
		},
		{
			"key": "mua2",
			"value": ""
		},
		{
			"key": "mua3",
			"value": ""
		},
		{
			"key": "mua4",
			"value": ""
		},
		{
			"key": "mua5",
			"value": ""
		},
		{
			"key": "mua6",
			"value": ""
		},
		{
			"key": "mua7",
			"value": ""
		},
		{
			"key": "mua8",
			"value": ""
		},
		{
			"key": "mua9",
			"value": ""
		},
		{
			"key": "mua10",
			"value": ""
		},
		{
			"key": "mua11",
			"value": ""
		},
		{
			"key": "mua12",
			"value": ""
		},
		{
			"key": "mua13",
			"value": ""
		},
		{
			"key": "mua14",
			"value": ""
		},
		{
			"key": "mua15",
			"value": ""
		},
		{
			"key": "mua16",
			"value": ""
		},
		{
			"key": "mua17",
			"value": ""
		},
		{
			"key": "mua18",
			"value": ""
		},
		{
			"key": "mua19",
			"value": ""
		},
		{
			"key": "mua20",
			"value": ""
		},
		{
			"key": "mua21",
			"value": ""
		},
		{
			"key": "mua22",
			"value": ""
		},
		{
			"key": "mua23",
			"value": ""
		},
		{
			"key": "mua24",
			"value": ""
		},
		{
			"key": "mua25",
			"value": ""
		},
		{
			"key": "mua26",
			"value": ""
		},
		{
			"key": "mua27",
			"value": ""
		},
		{
			"key": "mua28",
			"value": ""
		},
		{
			"key": "mua29",
			"value": ""
		},
		{
			"key": "mua30",
			"value": ""
		},
		{
			"key": "mua31",
			"value": ""
		},
		{
			"key": "mua32",
			"value": ""
		},
		{
			"key": "mua33",
			"value": ""
		},
		{
			"key": "mua34",
			"value": ""
		},
		{
			"key": "mua35",
			"value": ""
		},
		{
			"key": "mua36",
			"value": ""
		},
		{
			"key": "musp1",
			"value": ""
		},
		{
			"key": "musp2",
			"value": ""
		},
		{
			"key": "musp3",
			"value": ""
		},
		{
			"key": "musp4",
			"value": ""
		},
		{
			"key": "musp5",
			"value": ""
		},
		{
			"key": "musp6",
			"value": ""
		},
		{
			"key": "musp7",
			"value": ""
		},
		{
			"key": "musp8",
			"value": ""
		},
		{
			"key": "musp9",
			"value": ""
		},
		{
			"key": "musp10",
			"value": ""
		},
		{
			"key": "musp11",
			"value": ""
		},
		{
			"key": "musp12",
			"value": ""
		},
		{
			"key": "musp13",
			"value": ""
		},
		{
			"key": "musp14",
			"value": ""
		},
		{
			"key": "musp15",
			"value": ""
		},
		{
			"key": "musp16",
			"value": ""
		},
		{
			"key": "musp17",
			"value": ""
		},
		{
			"key": "musp18",
			"value": ""
		},
		{
			"key": "musp19",
			"value": ""
		},
		{
			"key": "musp20",
			"value": ""
		},
		{
			"key": "musp21",
			"value": ""
		},
		{
			"key": "musp22",
			"value": ""
		},
		{
			"key": "musp23",
			"value": ""
		},
		{
			"key": "musp24",
			"value": ""
		},
		{
			"key": "musp25",
			"value": ""
		},
		{
			"key": "musp26",
			"value": ""
		},
		{
			"key": "musp27",
			"value": ""
		},
		{
			"key": "musp28",
			"value": ""
		},
		{
			"key": "musp29",
			"value": ""
		},
		{
			"key": "musp30",
			"value": ""
		},
		{
			"key": "musp31",
			"value": ""
		},
		{
			"key": "musp32",
			"value": ""
		},
		{
			"key": "musp33",
			"value": ""
		},
		{
			"key": "musp34",
			"value": ""
		},
		{
			"key": "musp35",
			"value": ""
		},
		{
			"key": "musp36",
			"value": ""
		}
	]
}